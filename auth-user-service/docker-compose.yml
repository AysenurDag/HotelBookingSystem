services:
  # 1) SQL Server (AuthUserDb için)

  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sqlserver-authuser
    environment:
      - MSSQL_PID=Developer
      - MSSQL_TCP_PORT=1433
      - MSSQL_AGENT_ENABLED=true
      - MSSQL_SA_PASSWORD=AuthUserNew.123  # kendi güçlü SA şifreni kullan
    ports:
      - "1433:1433"
    healthcheck:
      test: ["CMD-SHELL", "bash -c '</dev/tcp/localhost/1433'"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - sqlserver_data:/var/opt/mssql
    networks:
      - microservices-network
 

  # 2) Redis (Önbellek için)
  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - microservices-network

  # 3) RabbitMQ (Mesaj kuyruğu için)
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - microservices-network

  # 4) AuthUserService
  auth-user-service:
    build:
      context: ./auth-user-service
      dockerfile: Dockerfile
    container_name: auth-user-service
    ports:
      - "5045:80"    # Host: 5045 → Container: 80 (Kestrel’in dinlediği port)
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      # Veritabanı bağlantısı
      - ConnectionStrings__DefaultConnection=Server=sqlserver;Database=AuthUserDb;User Id=AuthUserNew;Password=AuthUserNew.123;TrustServerCertificate=True;
      # Redis
      - RedisConnection=redis:6379
      # RabbitMQ
      - RabbitMq__HostName=rabbitmq
      - RabbitMq__QueueName=userQueue
      # (Diğer ayarlar appsettings.json’da kalabilir; gerekirse benzer __ notation ile ekle)
    depends_on:
      sqlserver:
        condition: service_healthy
      redis:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    networks:
      - microservices-network

networks:
  microservices-network:
    driver: bridge

volumes:
  sqlserver_data:
  rabbitmq_data: