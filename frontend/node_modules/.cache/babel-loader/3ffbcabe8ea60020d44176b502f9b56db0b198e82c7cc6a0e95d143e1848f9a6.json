{"ast":null,"code":"// src/services/hotelService.js\nconst API_URL = process.env.REACT_APP_HOTEL_SERVICE_API_URL;\nexport const searchHotels = async searchParams => {\n  try {\n    const queryParams = new URLSearchParams();\n    if (searchParams.destination) {\n      queryParams.set('city', searchParams.destination);\n    }\n\n    // Add pagination\n    queryParams.set('page', searchParams.page || 1);\n    queryParams.set('per_page', searchParams.perPage || 10);\n\n    // Other search parameters can be added here\n\n    const response = await fetch(`${API_URL}/hotels?${queryParams.toString()}`);\n    console.log(`${API_URL}`);\n    if (!response.ok) {\n      throw new Error(`Error ${response.status}: ${response.statusText}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Error searching hotels:', error);\n    throw error;\n  }\n};\nexport const getHotelById = async hotelId => {\n  try {\n    const response = await fetch(`${API_URL}/hotels/${hotelId}`);\n    if (!response.ok) {\n      throw new Error(`Error ${response.status}: ${response.statusText}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(`Error fetching hotel with ID ${hotelId}:`, error);\n    throw error;\n  }\n};","map":{"version":3,"names":["API_URL","process","env","REACT_APP_HOTEL_SERVICE_API_URL","searchHotels","searchParams","queryParams","URLSearchParams","destination","set","page","perPage","response","fetch","toString","console","log","ok","Error","status","statusText","json","error","getHotelById","hotelId"],"sources":["C:/Users/ozge/Desktop/HotelBookingSystem/frontend/src/services/hotelService.js"],"sourcesContent":["// src/services/hotelService.js\r\nconst API_URL = process.env.REACT_APP_HOTEL_SERVICE_API_URL;\r\n\r\nexport const searchHotels = async (searchParams) => {\r\n    try {\r\n      const queryParams = new URLSearchParams();\r\n      \r\n      if (searchParams.destination) {\r\n        queryParams.set('city', searchParams.destination);\r\n      }\r\n      \r\n      // Add pagination\r\n      queryParams.set('page', searchParams.page || 1);\r\n      queryParams.set('per_page', searchParams.perPage || 10);\r\n      \r\n      // Other search parameters can be added here\r\n      \r\n      const response = await fetch(`${API_URL}/hotels?${queryParams.toString()}`);\r\n      console.log(`${API_URL}`)\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Error ${response.status}: ${response.statusText}`);\r\n      }\r\n      \r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error('Error searching hotels:', error);\r\n      throw error;\r\n    }\r\n  };\r\n  \r\n  export const getHotelById = async (hotelId) => {\r\n    try {\r\n      const response = await fetch(`${API_URL}/hotels/${hotelId}`);\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`Error ${response.status}: ${response.statusText}`);\r\n      }\r\n      \r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error(`Error fetching hotel with ID ${hotelId}:`, error);\r\n      throw error;\r\n    }\r\n  };"],"mappings":"AAAA;AACA,MAAMA,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,+BAA+B;AAE3D,OAAO,MAAMC,YAAY,GAAG,MAAOC,YAAY,IAAK;EAChD,IAAI;IACF,MAAMC,WAAW,GAAG,IAAIC,eAAe,CAAC,CAAC;IAEzC,IAAIF,YAAY,CAACG,WAAW,EAAE;MAC5BF,WAAW,CAACG,GAAG,CAAC,MAAM,EAAEJ,YAAY,CAACG,WAAW,CAAC;IACnD;;IAEA;IACAF,WAAW,CAACG,GAAG,CAAC,MAAM,EAAEJ,YAAY,CAACK,IAAI,IAAI,CAAC,CAAC;IAC/CJ,WAAW,CAACG,GAAG,CAAC,UAAU,EAAEJ,YAAY,CAACM,OAAO,IAAI,EAAE,CAAC;;IAEvD;;IAEA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGb,OAAO,WAAWM,WAAW,CAACQ,QAAQ,CAAC,CAAC,EAAE,CAAC;IAC3EC,OAAO,CAACC,GAAG,CAAC,GAAGhB,OAAO,EAAE,CAAC;IAEzB,IAAI,CAACY,QAAQ,CAACK,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,SAASN,QAAQ,CAACO,MAAM,KAAKP,QAAQ,CAACQ,UAAU,EAAE,CAAC;IACrE;IAEA,OAAO,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdP,OAAO,CAACO,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMC,YAAY,GAAG,MAAOC,OAAO,IAAK;EAC7C,IAAI;IACF,MAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGb,OAAO,WAAWwB,OAAO,EAAE,CAAC;IAE5D,IAAI,CAACZ,QAAQ,CAACK,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,SAASN,QAAQ,CAACO,MAAM,KAAKP,QAAQ,CAACQ,UAAU,EAAE,CAAC;IACrE;IAEA,OAAO,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdP,OAAO,CAACO,KAAK,CAAC,gCAAgCE,OAAO,GAAG,EAAEF,KAAK,CAAC;IAChE,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}