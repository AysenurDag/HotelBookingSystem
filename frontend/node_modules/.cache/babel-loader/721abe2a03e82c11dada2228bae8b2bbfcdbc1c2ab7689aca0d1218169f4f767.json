{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ozge\\\\Desktop\\\\HotelBookingSystem\\\\frontend\\\\src\\\\pages\\\\results\\\\index.js\",\n  _s = $RefreshSig$();\n// src/pages/SearchResults/index.jsx\nimport React from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport SearchBar from '../../components/SearchBar';\nimport HotelCard from '../../components/HotelCard';\nimport useHotelSearch from '../../hooks/useHotelSearch';\nimport './results.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SearchResults = () => {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  // Extract search parameters from URL\n  const queryParams = new URLSearchParams(location.search);\n  const initialSearchParams = {\n    destination: queryParams.get('destination') || '',\n    checkIn: queryParams.get('checkIn') || '',\n    checkOut: queryParams.get('checkOut') || '',\n    guests: queryParams.get('guests') || '1',\n    page: parseInt(queryParams.get('page') || '1', 10),\n    perPage: parseInt(queryParams.get('perPage') || '10', 10)\n  };\n\n  // Use our custom hook\n  const {\n    searchParams,\n    updateSearch,\n    hotels,\n    loading,\n    error,\n    pagination,\n    goToPage\n  } = useHotelSearch(initialSearchParams);\n\n  // Handle search form submission\n  const handleSearch = newSearchValues => {\n    // Create updated URL query string\n    const newQueryParams = new URLSearchParams();\n    Object.entries(newSearchValues).forEach(([key, value]) => {\n      if (value) newQueryParams.set(key, value);\n    });\n\n    // Update URL\n    navigate(`/search?${newQueryParams.toString()}`);\n\n    // Update search parameters in our hook\n    updateSearch(newSearchValues);\n  };\n\n  // Calculate total pages\n  const totalPages = Math.ceil(pagination.total / pagination.perPage);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-results-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-bar-container\",\n      children: /*#__PURE__*/_jsxDEV(SearchBar, {\n        initialValues: searchParams,\n        onSearch: handleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: searchParams.destination ? `Hotels in ${searchParams.destination}` : 'All Available Hotels'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: [\"Error: \", error, \". Please try again.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: \"Loading hotels...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this) : hotels.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hotel-list\",\n          children: hotels.map((hotel, index) => /*#__PURE__*/_jsxDEV(HotelCard, {\n            hotel: hotel\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), totalPages > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pagination\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => goToPage(pagination.page - 1),\n            disabled: pagination.page === 1,\n            className: \"page-button\",\n            children: \"Previous\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"page-info\",\n            children: [\"Page \", pagination.page, \" of \", totalPages]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => goToPage(pagination.page + 1),\n            disabled: pagination.page === totalPages,\n            className: \"page-button\",\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-results\",\n        children: \"No hotels found for your search criteria. Try adjusting your search.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchResults, \"0+c4oieQWyMbh0Nslf4gvA7qKp0=\", false, function () {\n  return [useLocation, useNavigate, useHotelSearch];\n});\n_c = SearchResults;\nexport default SearchResults;\nvar _c;\n$RefreshReg$(_c, \"SearchResults\");","map":{"version":3,"names":["React","useLocation","useNavigate","SearchBar","HotelCard","useHotelSearch","jsxDEV","_jsxDEV","Fragment","_Fragment","SearchResults","_s","location","navigate","queryParams","URLSearchParams","search","initialSearchParams","destination","get","checkIn","checkOut","guests","page","parseInt","perPage","searchParams","updateSearch","hotels","loading","error","pagination","goToPage","handleSearch","newSearchValues","newQueryParams","Object","entries","forEach","key","value","set","toString","totalPages","Math","ceil","total","className","children","initialValues","onSearch","fileName","_jsxFileName","lineNumber","columnNumber","length","map","hotel","index","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/ozge/Desktop/HotelBookingSystem/frontend/src/pages/results/index.js"],"sourcesContent":["// src/pages/SearchResults/index.jsx\r\nimport React from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport SearchBar from '../../components/SearchBar';\r\nimport HotelCard from '../../components/HotelCard';\r\nimport useHotelSearch from '../../hooks/useHotelSearch';\r\nimport './results.css';\r\n\r\nconst SearchResults = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  \r\n  // Extract search parameters from URL\r\n  const queryParams = new URLSearchParams(location.search);\r\n  const initialSearchParams = {\r\n    destination: queryParams.get('destination') || '',\r\n    checkIn: queryParams.get('checkIn') || '',\r\n    checkOut: queryParams.get('checkOut') || '',\r\n    guests: queryParams.get('guests') || '1',\r\n    page: parseInt(queryParams.get('page') || '1', 10),\r\n    perPage: parseInt(queryParams.get('perPage') || '10', 10)\r\n  };\r\n  \r\n  // Use our custom hook\r\n  const { \r\n    searchParams, \r\n    updateSearch, \r\n    hotels, \r\n    loading, \r\n    error, \r\n    pagination, \r\n    goToPage \r\n  } = useHotelSearch(initialSearchParams);\r\n  \r\n  // Handle search form submission\r\n  const handleSearch = (newSearchValues) => {\r\n    // Create updated URL query string\r\n    const newQueryParams = new URLSearchParams();\r\n    Object.entries(newSearchValues).forEach(([key, value]) => {\r\n      if (value) newQueryParams.set(key, value);\r\n    });\r\n    \r\n    // Update URL\r\n    navigate(`/search?${newQueryParams.toString()}`);\r\n    \r\n    // Update search parameters in our hook\r\n    updateSearch(newSearchValues);\r\n  };\r\n\r\n  // Calculate total pages\r\n  const totalPages = Math.ceil(pagination.total / pagination.perPage);\r\n  \r\n  return (\r\n    <div className=\"search-results-page\">\r\n      <div className=\"search-bar-container\">\r\n        <SearchBar initialValues={searchParams} onSearch={handleSearch} />\r\n      </div>\r\n      \r\n      <div className=\"results-container\">\r\n        <h2>\r\n          {searchParams.destination \r\n            ? `Hotels in ${searchParams.destination}` \r\n            : 'All Available Hotels'}\r\n        </h2>\r\n        \r\n        {error && (\r\n          <div className=\"error-message\">\r\n            Error: {error}. Please try again.\r\n          </div>\r\n        )}\r\n        \r\n        {loading ? (\r\n          <div className=\"loading\">Loading hotels...</div>\r\n        ) : hotels.length > 0 ? (\r\n          <>\r\n            <div className=\"hotel-list\">\r\n              {hotels.map((hotel, index) => (\r\n                <HotelCard key={index} hotel={hotel} />\r\n              ))}\r\n            </div>\r\n            \r\n            {/* Pagination controls */}\r\n            {totalPages > 1 && (\r\n              <div className=\"pagination\">\r\n                <button \r\n                  onClick={() => goToPage(pagination.page - 1)}\r\n                  disabled={pagination.page === 1}\r\n                  className=\"page-button\"\r\n                >\r\n                  Previous\r\n                </button>\r\n                \r\n                <div className=\"page-info\">\r\n                  Page {pagination.page} of {totalPages}\r\n                </div>\r\n                \r\n                <button \r\n                  onClick={() => goToPage(pagination.page + 1)}\r\n                  disabled={pagination.page === totalPages}\r\n                  className=\"page-button\"\r\n                >\r\n                  Next\r\n                </button>\r\n              </div>\r\n            )}\r\n          </>\r\n        ) : (\r\n          <div className=\"no-results\">\r\n            No hotels found for your search criteria. Try adjusting your search.\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchResults;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}