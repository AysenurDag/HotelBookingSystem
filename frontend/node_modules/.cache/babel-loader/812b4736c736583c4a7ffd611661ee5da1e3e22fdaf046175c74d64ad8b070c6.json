{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ozge\\\\Desktop\\\\HotelBookingSystem\\\\frontend\\\\src\\\\pages\\\\results\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport SearchBar from '../../components/SearchBar';\nimport HotelCard from '../../components/HotelCard';\nimport './results.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchResults = () => {\n  _s();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n\n  // Get search parameters from URL\n  const initialSearchValues = {\n    destination: searchParams.get('destination') || '',\n    checkIn: searchParams.get('checkIn') || '',\n    checkOut: searchParams.get('checkOut') || '',\n    guests: searchParams.get('guests') || '1'\n  };\n  const [searchValues, setSearchValues] = useState(initialSearchValues);\n  const [hotels, setHotels] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  // Handle search form submission\n  const handleSearch = newSearchValues => {\n    setSearchValues(newSearchValues);\n    // Here you would update the URL with new search params\n    // And trigger a new search\n  };\n\n  // Fetch hotels based on search criteria\n  useEffect(() => {\n    const fetchHotels = async () => {\n      setLoading(true);\n      try {\n        // Replace with your actual API endpoint\n        const response = await fetch(`/api/hotels/search?destination=${searchValues.destination}&checkIn=${searchValues.checkIn}&checkOut=${searchValues.checkOut}&guests=${searchValues.guests}`);\n        if (!response.ok) {\n          throw new Error('Failed to fetch hotels');\n        }\n        const data = await response.json();\n        setHotels(data);\n      } catch (error) {\n        console.error('Error fetching hotels:', error);\n        // Handle error state here\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchHotels();\n  }, [searchValues]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-results-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-bar-container\",\n      children: /*#__PURE__*/_jsxDEV(SearchBar, {\n        initialValues: searchValues,\n        onSearch: handleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Hotels in \", searchValues.destination]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: \"Loading hotels...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this) : hotels.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hotel-list\",\n        children: hotels.map(hotel => /*#__PURE__*/_jsxDEV(HotelCard, {\n          hotel: hotel\n        }, hotel.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-results\",\n        children: \"No hotels found for your search criteria. Try adjusting your search.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchResults, \"AR7hRh0UMKhhXJ5ZUygeValflnk=\", false, function () {\n  return [useLocation];\n});\n_c = SearchResults;\nexport default SearchResults;\nvar _c;\n$RefreshReg$(_c, \"SearchResults\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","SearchBar","HotelCard","jsxDEV","_jsxDEV","SearchResults","_s","location","searchParams","URLSearchParams","search","initialSearchValues","destination","get","checkIn","checkOut","guests","searchValues","setSearchValues","hotels","setHotels","loading","setLoading","handleSearch","newSearchValues","fetchHotels","response","fetch","ok","Error","data","json","error","console","className","children","initialValues","onSearch","fileName","_jsxFileName","lineNumber","columnNumber","length","map","hotel","id","_c","$RefreshReg$"],"sources":["C:/Users/ozge/Desktop/HotelBookingSystem/frontend/src/pages/results/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport SearchBar from '../../components/SearchBar';\r\nimport HotelCard from '../../components/HotelCard';\r\nimport './results.css';\r\n\r\nconst SearchResults = () => {\r\n  const location = useLocation();\r\n  const searchParams = new URLSearchParams(location.search);\r\n  \r\n  // Get search parameters from URL\r\n  const initialSearchValues = {\r\n    destination: searchParams.get('destination') || '',\r\n    checkIn: searchParams.get('checkIn') || '',\r\n    checkOut: searchParams.get('checkOut') || '',\r\n    guests: searchParams.get('guests') || '1'\r\n  };\r\n\r\n  const [searchValues, setSearchValues] = useState(initialSearchValues);\r\n  const [hotels, setHotels] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Handle search form submission\r\n  const handleSearch = (newSearchValues) => {\r\n    setSearchValues(newSearchValues);\r\n    // Here you would update the URL with new search params\r\n    // And trigger a new search\r\n  };\r\n\r\n  // Fetch hotels based on search criteria\r\n  useEffect(() => {\r\n    const fetchHotels = async () => {\r\n      setLoading(true);\r\n      try {\r\n        // Replace with your actual API endpoint\r\n        const response = await fetch(`/api/hotels/search?destination=${searchValues.destination}&checkIn=${searchValues.checkIn}&checkOut=${searchValues.checkOut}&guests=${searchValues.guests}`);\r\n        \r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch hotels');\r\n        }\r\n        \r\n        const data = await response.json();\r\n        setHotels(data);\r\n      } catch (error) {\r\n        console.error('Error fetching hotels:', error);\r\n        // Handle error state here\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchHotels();\r\n  }, [searchValues]);\r\n\r\n  return (\r\n    <div className=\"search-results-page\">\r\n      <div className=\"search-bar-container\">\r\n        <SearchBar initialValues={searchValues} onSearch={handleSearch} />\r\n      </div>\r\n      \r\n      <div className=\"results-container\">\r\n        <h2>Hotels in {searchValues.destination}</h2>\r\n        \r\n        {loading ? (\r\n          <div className=\"loading\">Loading hotels...</div>\r\n        ) : hotels.length > 0 ? (\r\n          <div className=\"hotel-list\">\r\n            {hotels.map(hotel => (\r\n              <HotelCard key={hotel.id} hotel={hotel} />\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <div className=\"no-results\">\r\n            No hotels found for your search criteria. Try adjusting your search.\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchResults;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}