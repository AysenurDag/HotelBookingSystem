{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { searchHotels } from '../services/hotelService';\nconst useHotelSearch = initialSearchParams => {\n  _s();\n  const [searchParams, setSearchParams] = useState({\n    ...initialSearchParams,\n    page: 1,\n    perPage: 10\n  });\n  const [hotels, setHotels] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [pagination, setPagination] = useState({\n    page: 1,\n    perPage: 10,\n    total: 0\n  });\n  const updateSearch = newParams => {\n    const resetPage = Object.keys(newParams).some(key => key !== 'page' && key !== 'perPage');\n    setSearchParams(prev => ({\n      ...prev,\n      ...newParams,\n      page: resetPage ? 1 : newParams.page || prev.page\n    }));\n  };\n  const goToPage = page => {\n    updateSearch({\n      page\n    });\n  };\n  useEffect(() => {\n    const fetchHotels = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        const [fetchedHotels, total] = await searchHotels(searchParams);\n        setHotels(fetchedHotels || []);\n        setPagination({\n          page: searchParams.page,\n          perPage: searchParams.perPage,\n          total: total || 0\n        });\n      } catch (err) {\n        setError(err.message || 'Failed to fetch hotels');\n        setHotels([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchHotels();\n  }, [searchParams]);\n  return {\n    searchParams,\n    updateSearch,\n    hotels,\n    loading,\n    error,\n    pagination,\n    goToPage\n  };\n};\n_s(useHotelSearch, \"i0yyHrrr0b67JAe0fdeSwq1oJFA=\");\nexport default useHotelSearch;","map":{"version":3,"names":["useState","useEffect","searchHotels","useHotelSearch","initialSearchParams","_s","searchParams","setSearchParams","page","perPage","hotels","setHotels","loading","setLoading","error","setError","pagination","setPagination","total","updateSearch","newParams","resetPage","Object","keys","some","key","prev","goToPage","fetchHotels","fetchedHotels","err","message"],"sources":["C:/Users/MahsunDaÄŸAtolla/Desktop/SchoolProjects/HotelBooking/HotelBookingSystem/frontend/src/hooks/useHotelSearch.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { searchHotels } from '../services/hotelService';\r\n\r\nconst useHotelSearch = (initialSearchParams) => {\r\n  const [searchParams, setSearchParams] = useState({\r\n    ...initialSearchParams,\r\n    page: 1,\r\n    perPage: 10,\r\n  });\r\n\r\n  const [hotels, setHotels] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [pagination, setPagination] = useState({\r\n    page: 1,\r\n    perPage: 10,\r\n    total: 0,\r\n  });\r\n\r\n  const updateSearch = (newParams) => {\r\n    const resetPage =\r\n      Object.keys(newParams).some((key) => key !== 'page' && key !== 'perPage');\r\n    setSearchParams((prev) => ({\r\n      ...prev,\r\n      ...newParams,\r\n      page: resetPage ? 1 : newParams.page || prev.page,\r\n    }));\r\n  };\r\n\r\n  const goToPage = (page) => {\r\n    updateSearch({ page });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchHotels = async () => {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      try {\r\n        const [fetchedHotels, total] = await searchHotels(searchParams);\r\n\r\n        setHotels(fetchedHotels || []);\r\n        setPagination({\r\n          page: searchParams.page,\r\n          perPage: searchParams.perPage,\r\n          total: total || 0,\r\n        });\r\n      } catch (err) {\r\n        setError(err.message || 'Failed to fetch hotels');\r\n        setHotels([]);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchHotels();\r\n  }, [searchParams]);\r\n\r\n  return {\r\n    searchParams,\r\n    updateSearch,\r\n    hotels,\r\n    loading,\r\n    error,\r\n    pagination,\r\n    goToPage,\r\n  };\r\n};\r\n\r\nexport default useHotelSearch;\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,YAAY,QAAQ,0BAA0B;AAEvD,MAAMC,cAAc,GAAIC,mBAAmB,IAAK;EAAAC,EAAA;EAC9C,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC;IAC/C,GAAGI,mBAAmB;IACtBI,IAAI,EAAE,CAAC;IACPC,OAAO,EAAE;EACX,CAAC,CAAC;EAEF,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACgB,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAAC;IAC3CQ,IAAI,EAAE,CAAC;IACPC,OAAO,EAAE,EAAE;IACXS,KAAK,EAAE;EACT,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAIC,SAAS,IAAK;IAClC,MAAMC,SAAS,GACbC,MAAM,CAACC,IAAI,CAACH,SAAS,CAAC,CAACI,IAAI,CAAEC,GAAG,IAAKA,GAAG,KAAK,MAAM,IAAIA,GAAG,KAAK,SAAS,CAAC;IAC3ElB,eAAe,CAAEmB,IAAI,KAAM;MACzB,GAAGA,IAAI;MACP,GAAGN,SAAS;MACZZ,IAAI,EAAEa,SAAS,GAAG,CAAC,GAAGD,SAAS,CAACZ,IAAI,IAAIkB,IAAI,CAAClB;IAC/C,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAMmB,QAAQ,GAAInB,IAAI,IAAK;IACzBW,YAAY,CAAC;MAAEX;IAAK,CAAC,CAAC;EACxB,CAAC;EAEDP,SAAS,CAAC,MAAM;IACd,MAAM2B,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9Bf,UAAU,CAAC,IAAI,CAAC;MAChBE,QAAQ,CAAC,IAAI,CAAC;MAEd,IAAI;QACF,MAAM,CAACc,aAAa,EAAEX,KAAK,CAAC,GAAG,MAAMhB,YAAY,CAACI,YAAY,CAAC;QAE/DK,SAAS,CAACkB,aAAa,IAAI,EAAE,CAAC;QAC9BZ,aAAa,CAAC;UACZT,IAAI,EAAEF,YAAY,CAACE,IAAI;UACvBC,OAAO,EAAEH,YAAY,CAACG,OAAO;UAC7BS,KAAK,EAAEA,KAAK,IAAI;QAClB,CAAC,CAAC;MACJ,CAAC,CAAC,OAAOY,GAAG,EAAE;QACZf,QAAQ,CAACe,GAAG,CAACC,OAAO,IAAI,wBAAwB,CAAC;QACjDpB,SAAS,CAAC,EAAE,CAAC;MACf,CAAC,SAAS;QACRE,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDe,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAACtB,YAAY,CAAC,CAAC;EAElB,OAAO;IACLA,YAAY;IACZa,YAAY;IACZT,MAAM;IACNE,OAAO;IACPE,KAAK;IACLE,UAAU;IACVW;EACF,CAAC;AACH,CAAC;AAACtB,EAAA,CAhEIF,cAAc;AAkEpB,eAAeA,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}